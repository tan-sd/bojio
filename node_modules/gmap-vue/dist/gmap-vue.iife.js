var GmapVue=function(e){"use strict";function t(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function o(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?t(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==o)return;var n,i,s=[],r=!0,a=!1;try{for(o=o.call(e);!(r=(n=o.next()).done)&&(s.push(n.value),!t||s.length!==t);r=!0);}catch(e){a=!0,i=e}finally{try{r||null==o.return||o.return()}finally{if(a)throw i}}return s}(e,t)||l(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||l(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){if(e){if("string"==typeof e)return c(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}function p(e,t,o){o.forEach((function(o){(e.$gmapOptions.autoBindAllEvents||e.$listeners[o])&&t.addListener(o,(function(t){e.$emit(o,t)}))}))}function d(e){return e.charAt(0).toUpperCase()+e.slice(1)}function u(e,t){return Object.keys(t).reduce((function(t,o){return void 0!==e[o]&&(t[o]=e[o]),t}),{})}function h(e){var t,o=!1;return function(){return o||(o=!0,t=e()),t}}function m(e){return Object.entries(e).map((function(e){var t=r(e,2),o=t[0],n=t[1],i={};return"type"in n&&(i.type=n.type),"default"in n&&(i.default=n.default),"required"in n&&(i.required=n.required),[o,i]})).reduce((function(e,t){var o=r(t,2),n=o[0],i=o[1];return e[n]=i,e}),{})}function f(e){var t=e.addEventListener?e.addEventListener:e.attachEvent;function o(o,n){if("keydown"===o){var i=n;n=function(t){var o=document?document.getElementsByClassName("pac-item-selected").length>0:null;if(13===t.which&&!o){var n=document.createEvent("Event");n.keyCode=40,n.which=40,i.apply(e,[n])}i.apply(e,[t])}}t.apply(e,[o,n])}e.addEventListener=o,e.attachEvent=o}function y(e){var t=0;e((function(){t+=1}),(function(){t=Math.max(0,t-1)}),(function(){return 0===t}))}function g(e,t,o){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=!1;function s(){i||(i=!0,e.$nextTick((function(){i=!1,o()})))}t.forEach((function(t){e.$watch(t,s,{immediate:n})}))}function b(e,t,o){Object.keys(o).forEach((function(n){var i=o[n],s=i.twoWay,r=i.type,a=i.trackProperties;if(!i.noBind){var l="set".concat(d(n)),c="get".concat(d(n)),p="".concat(n.toLowerCase(),"_changed"),u=e[n];if(void 0===t[l])throw new Error("".concat(l," is not a method of (the Maps object corresponding to) ").concat(e.$options._componentTag));r===Object&&a?g(e,a.map((function(e){return"".concat(n,".").concat(e)})),(function(){t[l](e[n])}),void 0!==e[n]):e.$watch(n,(function(){var o=e[n];t[l](o)}),{immediate:void 0!==u,deep:r===Object}),s&&(e.$gmapOptions.autoBindAllEvents||e.$listeners[p])&&t.addListener(p,(function(){e.$emit(p,t[c]())}))}}))}var O={bounds:{type:Object},componentRestrictions:{type:Object,noBind:!0},types:{type:Array,default:function(){return[]}}},v={circleOptions:{type:Object,twoWay:!1,noBind:!0},markerOptions:{type:Object,twoWay:!1,noBind:!0},polygonOptions:{type:Object,twoWay:!1,noBind:!0},polylineOptions:{type:Object,twoWay:!1,noBind:!0},rectangleOptions:{type:Object,twoWay:!1,noBind:!0}},$={options:{type:Object,twoWay:!1,default:function(){}},data:{type:Array,twoWay:!0}},w={content:{type:Object,twoWay:!0},options:{type:Object,required:!1,default:function(){return{}}},position:{type:Object,twoWay:!0},zIndex:{type:Number,twoWay:!0}},j={clickable:{type:Boolean,twoWay:!0,noBind:!0},map:{type:Object,twoWay:!0},preserveViewport:{type:Boolean,twoWay:!0,noBind:!0},screenOverlays:{type:Boolean,twoWay:!0,noBind:!0},suppressInfoWindows:{type:Boolean,twoWay:!0,noBind:!0},url:{type:String,twoWay:!1},zIndex:{type:Number,twoWay:!0},options:{type:Object,default:function(){return{}}}},k={center:{required:!0,twoWay:!0,type:Object,noBind:!0},zoom:{required:!1,twoWay:!0,type:Number,noBind:!0},heading:{type:Number,twoWay:!0},mapTypeId:{twoWay:!0,type:String},tilt:{twoWay:!0,type:Number},options:{type:Object,default:function(){return{}}}},P={animation:{twoWay:!0,type:Number},attribution:{type:Object},clickable:{type:Boolean,twoWay:!0,default:!0},cursor:{type:String,twoWay:!0},draggable:{type:Boolean,twoWay:!0,default:!1},icon:{twoWay:!0},label:{},opacity:{type:Number,default:1},options:{type:Object},place:{type:Object},position:{type:Object,twoWay:!0},shape:{type:Object,twoWay:!0},title:{type:String,twoWay:!0},zIndex:{type:Number,twoWay:!0},visible:{twoWay:!0,default:!0}},M={zoom:{twoWay:!0,type:Number},pov:{twoWay:!0,type:Object,trackProperties:["pitch","heading"]},position:{twoWay:!0,type:Object,noBind:!0},pano:{twoWay:!0,type:String},motionTracking:{twoWay:!1,type:Boolean},visible:{twoWay:!0,type:Boolean,default:!0},options:{twoWay:!1,type:Object,default:function(){return{}}}},_={clickable:{type:Boolean,noBind:!0},draggable:{type:Boolean},editable:{type:Boolean},fillColor:{type:String,noBind:!0},fillOpacity:{type:Number,noBind:!0},strokeColor:{type:String,noBind:!0},strokeOpacity:{type:Number,noBind:!0},strokePosition:{type:Number,noBind:!0},strokeWeight:{type:Number,noBind:!0},visible:{type:Boolean},options:{type:Object},path:{type:Array,twoWay:!0,noBind:!0},paths:{type:Array,twoWay:!0,noBind:!0}},C={clickable:{type:Boolean,noBind:!0},draggable:{type:Boolean},editable:{type:Boolean},strokeColor:{type:String,noBind:!0},strokeOpacity:{type:Number,noBind:!0},strokeWeight:{type:Number,noBind:!0},visible:{type:Boolean},options:{twoWay:!1,type:Object},path:{type:Array,twoWay:!0}},S={bounds:{type:Object,twoWay:!0},clickable:{type:Boolean,noBind:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,noBind:!0},fillOpacity:{type:Number,noBind:!0},strokeColor:{type:String,noBind:!0},strokeOpacity:{type:Number,noBind:!0},strokePosition:{type:Number,noBind:!0},strokeWeight:{type:Number,noBind:!0},visible:{type:Boolean},options:{type:Object,twoWay:!1}},B={center:{type:Object,twoWay:!0,required:!0},radius:{type:Number,twoWay:!0},clickable:{type:Boolean,noBind:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,noBind:!0},fillOpacity:{type:Number,noBind:!0},strokeColor:{type:String,noBind:!0},strokeOpacity:{type:Number,noBind:!0},strokePosition:{type:Number,noBind:!0},strokeWeight:{type:Number,noBind:!0},visible:{type:Boolean},options:{type:Object,twoWay:!1}},L={bounds:{type:Object},defaultPlace:{type:String,default:""},componentRestrictions:{type:Object,default:null},types:{type:Array,default:function(){return[]}},placeholder:{required:!1,type:String},className:{required:!1,type:String},label:{required:!1,type:String,default:null},selectFirstOnEnter:{require:!1,type:Boolean,default:!1}},x={algorithm:{type:Object},onClusterClick:{type:Function},renderer:{type:Object},options:{type:Object}};function E(e,t,o,n,i,s,r,a,l,c){"boolean"!=typeof r&&(l=a,a=r,r=!1);const p="function"==typeof o?o.options:o;let d;if(e&&e.render&&(p.render=e.render,p.staticRenderFns=e.staticRenderFns,p._compiled=!0,i&&(p.functional=!0)),n&&(p._scopeId=n),s?(d=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,l(e)),e&&e._registeredComponents&&e._registeredComponents.add(s)},p._ssrRegister=d):t&&(d=r?function(e){t.call(this,c(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,a(e))}),d)if(p.functional){const e=p.render;p.render=function(t,o){return d.call(o),e(t,o)}}else{const e=p.beforeCreate;p.beforeCreate=e?[].concat(e,d):[d]}return o}const W=E({render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[e._t("default",(function(){return[o("input",e._g(e._b({ref:"input"},"input",e.$attrs,!1),e.$listeners))]}),{attrs:e.$attrs,listeners:e.$listeners})],2)},staticRenderFns:[]},undefined,{name:"AutocompleteInput",props:{bounds:{type:Object,default:void 0},componentRestrictions:{type:Object,default:void 0},types:{type:Array,default:void 0},selectFirstOnEnter:{required:!1,type:Boolean,default:!1},slotRefName:{required:!1,type:String,default:"input"},childRefName:{required:!1,type:String,default:"input"},options:{type:Object,default:void 0},setFieldsTo:{required:!1,type:Array,default:null}},watch:{componentRestrictions(e){void 0!==e&&this.$autocomplete.setComponentRestrictions(e)}},async mounted(){await this.$gmapApiPromiseLazy();let e=null;if(this.$scopedSlots.default){if(!Object.keys(this.$scopedSlots.default()[0].context.$refs).length)throw new Error("If you use the slot input you must add a ref to the element that you will use as the input, and if you use a vue component, eg: v-text-field, etc, you need to set the childRefName indicating what is the ref name of the html input elemnt behind your component.");e=this.$scopedSlots.default()[0].context.$refs[this.slotRefName],e&&e.$refs&&(e=e.$refs[this.childRefName]),e&&(this.$refs.input=e)}if(this.selectFirstOnEnter&&f(this.$refs.input),"function"!=typeof google.maps.places.Autocomplete)throw new Error("google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?");const t={...u(this,O),...this.options};this.$autocomplete=new google.maps.places.Autocomplete(this.$refs.input,t),b(this,this.$autocomplete,O),this.setFieldsTo&&this.$autocomplete.setFields(this.setFieldsTo),this.$autocomplete.addListener("place_changed",(()=>{this.$emit("place_changed",this.$autocomplete.getPlace())}))},destroyed(){this.$$autocomplete&&this.$$autocomplete.setMap&&this.$$autocomplete.setMap(null)}},undefined,false,undefined,!1,void 0,void 0,void 0);var z={inject:{$mapPromise:{default:"abcdef"}},provide:function(){var e=this;return this.$mapPromise.then((function(t){e.$map=t})),{}}};const N=E({},undefined,{name:"CircleShape",mixins:[z],render:()=>"",provide(){const e=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,B)},{options:n,...i}=o;return this.$circleObject=new google.maps.Circle(i),b(this,this.$circleObject,B),p(this,this.$circleObject,e),this.$circleObject})).catch((e=>{throw e}));return this.$circlePromise=t,{$circlePromise:t}},props:{center:{type:Object,required:!0},radius:{type:Number,default:10},clickable:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:""},fillOpacity:{type:Number,default:1},strokeColor:{type:String,default:""},strokeOpacity:{type:Number,default:1},strokePosition:{type:Number,default:0},strokeWeight:{type:Number,default:1},visible:{type:Boolean,default:!0},options:{type:Object,default:void 0}},destroyed(){this.$circleObject&&this.$circleObject.setMap&&this.$circleObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);function A(e,t,o,n,i,s){if(i-n<=o)return;const r=n+i>>1;I(e,t,r,n,i,s%2),A(e,t,o,n,r-1,s+1),A(e,t,o,r+1,i,s+1)}function I(e,t,o,n,i,s){for(;i>n;){if(i-n>600){const r=i-n+1,a=o-n+1,l=Math.log(r),c=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*c*(r-c)/r)*(a-r/2<0?-1:1);I(e,t,o,Math.max(n,Math.floor(o-a*c/r+p)),Math.min(i,Math.floor(o+(r-a)*c/r+p)),s)}const r=t[2*o+s];let a=n,l=i;for(R(e,t,n,o),t[2*i+s]>r&&R(e,t,n,i);a<l;){for(R(e,t,a,l),a++,l--;t[2*a+s]<r;)a++;for(;t[2*l+s]>r;)l--}t[2*n+s]===r?R(e,t,n,l):(l++,R(e,t,l,i)),l<=o&&(n=l+1),o<=l&&(i=l-1)}}function R(e,t,o,n){T(e,o,n),T(t,2*o,2*n),T(t,2*o+1,2*n+1)}function T(e,t,o){const n=e[t];e[t]=e[o],e[o]=n}function F(e,t,o,n){const i=e-o,s=t-n;return i*i+s*s}const D=e=>e[0],Z=e=>e[1];class G{constructor(e,t=D,o=Z,n=64,i=Float64Array){this.nodeSize=n,this.points=e;const s=e.length<65536?Uint16Array:Uint32Array,r=this.ids=new s(e.length),a=this.coords=new i(2*e.length);for(let n=0;n<e.length;n++)r[n]=n,a[2*n]=t(e[n]),a[2*n+1]=o(e[n]);A(r,a,n,0,r.length-1,0)}range(e,t,o,n){return function(e,t,o,n,i,s,r){const a=[0,e.length-1,0],l=[];let c,p;for(;a.length;){const d=a.pop(),u=a.pop(),h=a.pop();if(u-h<=r){for(let r=h;r<=u;r++)c=t[2*r],p=t[2*r+1],c>=o&&c<=i&&p>=n&&p<=s&&l.push(e[r]);continue}const m=Math.floor((h+u)/2);c=t[2*m],p=t[2*m+1],c>=o&&c<=i&&p>=n&&p<=s&&l.push(e[m]);const f=(d+1)%2;(0===d?o<=c:n<=p)&&(a.push(h),a.push(m-1),a.push(f)),(0===d?i>=c:s>=p)&&(a.push(m+1),a.push(u),a.push(f))}return l}(this.ids,this.coords,e,t,o,n,this.nodeSize)}within(e,t,o){return function(e,t,o,n,i,s){const r=[0,e.length-1,0],a=[],l=i*i;for(;r.length;){const c=r.pop(),p=r.pop(),d=r.pop();if(p-d<=s){for(let i=d;i<=p;i++)F(t[2*i],t[2*i+1],o,n)<=l&&a.push(e[i]);continue}const u=Math.floor((d+p)/2),h=t[2*u],m=t[2*u+1];F(h,m,o,n)<=l&&a.push(e[u]);const f=(c+1)%2;(0===c?o-i<=h:n-i<=m)&&(r.push(d),r.push(u-1),r.push(f)),(0===c?o+i>=h:n+i>=m)&&(r.push(u+1),r.push(p),r.push(f))}return a}(this.ids,this.coords,e,t,o,this.nodeSize)}}const q={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:e=>e},U=Math.fround||(V=new Float32Array(1),e=>(V[0]=+e,V[0]));var V;class K{constructor(e){this.options=oe(Object.create(q),e),this.trees=new Array(this.options.maxZoom+1)}load(e){const{log:t,minZoom:o,maxZoom:n,nodeSize:i}=this.options;t&&console.time("total time");const s=`prepare ${e.length} points`;t&&console.time(s),this.points=e;let r=[];for(let t=0;t<e.length;t++)e[t].geometry&&r.push(X(e[t],t));this.trees[n+1]=new G(r,ne,ie,i,Float32Array),t&&console.timeEnd(s);for(let e=n;e>=o;e--){const o=+Date.now();r=this._cluster(r,e),this.trees[e]=new G(r,ne,ie,i,Float32Array),t&&console.log("z%d: %d clusters in %dms",e,r.length,+Date.now()-o)}return t&&console.timeEnd("total time"),this}getClusters(e,t){let o=((e[0]+180)%360+360)%360-180;const n=Math.max(-90,Math.min(90,e[1]));let i=180===e[2]?180:((e[2]+180)%360+360)%360-180;const s=Math.max(-90,Math.min(90,e[3]));if(e[2]-e[0]>=360)o=-180,i=180;else if(o>i){const e=this.getClusters([o,n,180,s],t),r=this.getClusters([-180,n,i,s],t);return e.concat(r)}const r=this.trees[this._limitZoom(t)],a=r.range(Q(o),ee(s),Q(i),ee(n)),l=[];for(const e of a){const t=r.points[e];l.push(t.numPoints?J(t):this.points[t.index])}return l}getChildren(e){const t=this._getOriginId(e),o=this._getOriginZoom(e),n="No cluster with the specified id.",i=this.trees[o];if(!i)throw new Error(n);const s=i.points[t];if(!s)throw new Error(n);const r=this.options.radius/(this.options.extent*Math.pow(2,o-1)),a=i.within(s.x,s.y,r),l=[];for(const t of a){const o=i.points[t];o.parentId===e&&l.push(o.numPoints?J(o):this.points[o.index])}if(0===l.length)throw new Error(n);return l}getLeaves(e,t,o){t=t||10,o=o||0;const n=[];return this._appendLeaves(n,e,t,o,0),n}getTile(e,t,o){const n=this.trees[this._limitZoom(e)],i=Math.pow(2,e),{extent:s,radius:r}=this.options,a=r/s,l=(o-a)/i,c=(o+1+a)/i,p={features:[]};return this._addTileFeatures(n.range((t-a)/i,l,(t+1+a)/i,c),n.points,t,o,i,p),0===t&&this._addTileFeatures(n.range(1-a/i,l,1,c),n.points,i,o,i,p),t===i-1&&this._addTileFeatures(n.range(0,l,a/i,c),n.points,-1,o,i,p),p.features.length?p:null}getClusterExpansionZoom(e){let t=this._getOriginZoom(e)-1;for(;t<=this.options.maxZoom;){const o=this.getChildren(e);if(t++,1!==o.length)break;e=o[0].properties.cluster_id}return t}_appendLeaves(e,t,o,n,i){const s=this.getChildren(t);for(const t of s){const s=t.properties;if(s&&s.cluster?i+s.point_count<=n?i+=s.point_count:i=this._appendLeaves(e,s.cluster_id,o,n,i):i<n?i++:e.push(t),e.length===o)break}return i}_addTileFeatures(e,t,o,n,i,s){for(const r of e){const e=t[r],a=e.numPoints;let l,c,p;if(a)l=Y(e),c=e.x,p=e.y;else{const t=this.points[e.index];l=t.properties,c=Q(t.geometry.coordinates[0]),p=ee(t.geometry.coordinates[1])}const d={type:1,geometry:[[Math.round(this.options.extent*(c*i-o)),Math.round(this.options.extent*(p*i-n))]],tags:l};let u;a?u=e.id:this.options.generateId?u=e.index:this.points[e.index].id&&(u=this.points[e.index].id),void 0!==u&&(d.id=u),s.features.push(d)}}_limitZoom(e){return Math.max(this.options.minZoom,Math.min(Math.floor(+e),this.options.maxZoom+1))}_cluster(e,t){const o=[],{radius:n,extent:i,reduce:s,minPoints:r}=this.options,a=n/(i*Math.pow(2,t));for(let n=0;n<e.length;n++){const i=e[n];if(i.zoom<=t)continue;i.zoom=t;const l=this.trees[t+1],c=l.within(i.x,i.y,a),p=i.numPoints||1;let d=p;for(const e of c){const o=l.points[e];o.zoom>t&&(d+=o.numPoints||1)}if(d>p&&d>=r){let e=i.x*p,r=i.y*p,a=s&&p>1?this._map(i,!0):null;const u=(n<<5)+(t+1)+this.points.length;for(const o of c){const n=l.points[o];if(n.zoom<=t)continue;n.zoom=t;const c=n.numPoints||1;e+=n.x*c,r+=n.y*c,n.parentId=u,s&&(a||(a=this._map(i,!0)),s(a,this._map(n)))}i.parentId=u,o.push(H(e/d,r/d,u,d,a))}else if(o.push(i),d>1)for(const e of c){const n=l.points[e];n.zoom<=t||(n.zoom=t,o.push(n))}}return o}_getOriginId(e){return e-this.points.length>>5}_getOriginZoom(e){return(e-this.points.length)%32}_map(e,t){if(e.numPoints)return t?oe({},e.properties):e.properties;const o=this.points[e.index].properties,n=this.options.map(o);return t&&n===o?oe({},n):n}}function H(e,t,o,n,i){return{x:U(e),y:U(t),zoom:1/0,id:o,parentId:-1,numPoints:n,properties:i}}function X(e,t){const[o,n]=e.geometry.coordinates;return{x:U(Q(o)),y:U(ee(n)),zoom:1/0,index:t,parentId:-1}}function J(e){return{type:"Feature",id:e.id,properties:Y(e),geometry:{type:"Point",coordinates:[(t=e.x,360*(t-.5)),te(e.y)]}};var t}function Y(e){const t=e.numPoints,o=t>=1e4?`${Math.round(t/1e3)}k`:t>=1e3?Math.round(t/100)/10+"k":t;return oe(oe({},e.properties),{cluster:!0,cluster_id:e.id,point_count:t,point_count_abbreviated:o})}function Q(e){return e/360+.5}function ee(e){const t=Math.sin(e*Math.PI/180),o=.5-.25*Math.log((1+t)/(1-t))/Math.PI;return o<0?0:o>1?1:o}function te(e){const t=(180-360*e)*Math.PI/180;return 360*Math.atan(Math.exp(t))/Math.PI-90}function oe(e,t){for(const o in t)e[o]=t[o];return e}function ne(e){return e.x}function ie(e){return e.y}var se=function e(t,o){if(t===o)return!0;if(t&&o&&"object"==typeof t&&"object"==typeof o){if(t.constructor!==o.constructor)return!1;var n,i,s;if(Array.isArray(t)){if((n=t.length)!=o.length)return!1;for(i=n;0!=i--;)if(!e(t[i],o[i]))return!1;return!0}if(t.constructor===RegExp)return t.source===o.source&&t.flags===o.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===o.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===o.toString();if((n=(s=Object.keys(t)).length)!==Object.keys(o).length)return!1;for(i=n;0!=i--;)if(!Object.prototype.hasOwnProperty.call(o,s[i]))return!1;for(i=n;0!=i--;){var r=s[i];if(!e(t[r],o[r]))return!1}return!0}return t!=t&&o!=o};
/*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */class re{constructor({markers:e,position:t}){this.markers=e,t&&(t instanceof google.maps.LatLng?this._position=t:this._position=new google.maps.LatLng(t))}get bounds(){if(0!==this.markers.length||this._position)return this.markers.reduce(((e,t)=>e.extend(t.getPosition())),new google.maps.LatLngBounds(this._position,this._position))}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter((e=>e.getVisible())).length}push(e){this.markers.push(e)}delete(){this.marker&&(this.marker.setMap(null),delete this.marker),this.markers.length=0}}const ae=e=>e.map((e=>new re({position:e.getPosition(),markers:[e]})));class le extends class{constructor({maxZoom:e=16}){this.maxZoom=e}noop({markers:e}){return ae(e)}}{constructor(e){var{maxZoom:t,radius:o=60}=e,n=function(e,t){var o={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(n=Object.getOwnPropertySymbols(e);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(e,n[i])&&(o[n[i]]=e[n[i]])}return o}(e,["maxZoom","radius"]);super({maxZoom:t}),this.superCluster=new K(Object.assign({maxZoom:this.maxZoom,radius:o},n)),this.state={zoom:null}}calculate(e){let t=!1;if(!se(e.markers,this.markers)){t=!0,this.markers=[...e.markers];const o=this.markers.map((e=>({type:"Feature",geometry:{type:"Point",coordinates:[e.getPosition().lng(),e.getPosition().lat()]},properties:{marker:e}})));this.superCluster.load(o)}const o={zoom:e.map.getZoom()};return t||this.state.zoom>this.maxZoom&&o.zoom>this.maxZoom||(t=t||!se(this.state,o)),this.state=o,t&&(this.clusters=this.cluster(e)),{clusters:this.clusters,changed:t}}cluster({map:e}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(e.getZoom())).map(this.transformCluster.bind(this))}transformCluster({geometry:{coordinates:[e,t]},properties:o}){if(o.cluster)return new re({markers:this.superCluster.getLeaves(o.cluster_id,1/0).map((e=>e.properties.marker)),position:new google.maps.LatLng({lat:t,lng:e})});{const e=o.marker;return new re({markers:[e],position:e.getPosition()})}}}class ce{constructor(e,t){this.markers={sum:e.length};const o=t.map((e=>e.count)),n=o.reduce(((e,t)=>e+t),0);this.clusters={count:t.length,markers:{mean:n/t.length,sum:n,min:Math.min(...o),max:Math.max(...o)}}}}class pe{render({count:e,position:t},o){const n=e>Math.max(10,o.clusters.markers.mean)?"#ff0000":"#0000ff",i=window.btoa(`\n  <svg fill="${n}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">\n    <circle cx="120" cy="120" opacity=".6" r="70" />\n    <circle cx="120" cy="120" opacity=".3" r="90" />\n    <circle cx="120" cy="120" opacity=".2" r="110" />\n  </svg>`);return new google.maps.Marker({position:t,icon:{url:`data:image/svg+xml;base64,${i}`,scaledSize:new google.maps.Size(45,45)},label:{text:String(e),color:"rgba(255,255,255,0.9)",fontSize:"12px"},title:`Cluster of ${e} markers`,zIndex:Number(google.maps.Marker.MAX_ZINDEX)+e})}}class de{constructor(){!function(e,t){for(let o in t.prototype)e.prototype[o]=t.prototype[o]}(de,google.maps.OverlayView)}}var ue;!function(e){e.CLUSTERING_BEGIN="clusteringbegin",e.CLUSTERING_END="clusteringend",e.CLUSTER_CLICK="click"}(ue||(ue={}));const he=(e,t,o)=>{o.fitBounds(t.bounds)};class me extends de{constructor({map:e,markers:t=[],algorithm:o=new le({}),renderer:n=new pe,onClusterClick:i=he}){super(),this.markers=[...t],this.clusters=[],this.algorithm=o,this.renderer=n,this.onClusterClick=i,e&&this.setMap(e)}addMarker(e,t){this.markers.includes(e)||(this.markers.push(e),t||this.render())}addMarkers(e,t){e.forEach((e=>{this.addMarker(e,!0)})),t||this.render()}removeMarker(e,t){const o=this.markers.indexOf(e);return-1!==o&&(e.setMap(null),this.markers.splice(o,1),t||this.render(),!0)}removeMarkers(e,t){let o=!1;return e.forEach((e=>{o=this.removeMarker(e,!0)||o})),o&&!t&&this.render(),o}clearMarkers(e){this.markers.length=0,e||this.render()}render(){const e=this.getMap();if(e instanceof google.maps.Map&&this.getProjection()){google.maps.event.trigger(this,ue.CLUSTERING_BEGIN,this);const{clusters:t,changed:o}=this.algorithm.calculate({markers:this.markers,map:e,mapCanvasProjection:this.getProjection()});(o||null==o)&&(this.reset(),this.clusters=t,this.renderClusters()),google.maps.event.trigger(this,ue.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach((e=>e.setMap(null))),this.clusters.forEach((e=>e.delete())),this.clusters=[]}renderClusters(){const e=new ce(this.markers,this.clusters),t=this.getMap();this.clusters.forEach((o=>{1===o.markers.length?o.marker=o.markers[0]:(o.marker=this.renderer.render(o,e),this.onClusterClick&&o.marker.addListener("click",(e=>{google.maps.event.trigger(this,ue.CLUSTER_CLICK,o),this.onClusterClick(e,o,t)}))),o.marker.setMap(t)}))}}const fe=E({render:function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",[e._t("default")],2)},staticRenderFns:[]},undefined,{name:"ClusterIcon",mixins:[z],provide(){const e=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,x)},{options:n,...i}=o;if(void 0===me)throw new Error("MarkerClusterer is not installed! require() it or include it from https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js");const{map:s,markers:r,algorithm:a,onClusterClick:l,renderer:c}=i;return this.$clusterObject=new me({map:s,markers:r,algorithm:a,onClusterClick:l,renderer:c}),b(this,this.$clusterObject,{}),p(this,this.$clusterObject,e),Object.keys({}).forEach((e=>{({})[e].twoWay&&this.$on(`${e.toLowerCase()}_changed`,this.reinsertMarkers)})),this.$clusterObject})).catch((e=>{throw e}));return this.$clusterPromise=t,{$clusterPromise:t}},props:{algorithm:{type:Object,default:void 0},onClusterClick:{type:Function,default:void 0},renderer:{type:Object,default:void 0},options:{type:Object,default:void 0}},beforeDestroy(){this.$children.forEach((e=>{e.$clusterObject===this.$clusterObject&&(e.$clusterObject=null)})),this.$clusterObject&&this.$clusterObject.clearMarkers()},destroyed(){this.$clusterObject&&this.$clusterObject.setMap&&this.$clusterObject.setMap(null)},updated(){this.$clusterObject&&this.$clusterObject.render()},methods:{reinsertMarkers(){const e=[...this.$clusterObject.markers];this.$clusterObject.clearMarkers(),this.$clusterObject.addMarkers(e)}}},undefined,false,undefined,!1,void 0,void 0,void 0);const ye=E({render:function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",[e._t("default",null,{setDrawingMode:e.setDrawingMode,deleteSelection:e.deleteSelection})],2)},staticRenderFns:[]},undefined,{name:"DrawingManager",mixins:[z],provide(){const e=this.$mapPromise.then((e=>{this.$map=e;const t={...this.options,map:e,...u(this,v)},{options:o,...n}=t;this.drawingModes=Object.keys(n).reduce(((e,t)=>{const o=t.split("Options");return o.length>1&&e.push(o[0]),e}),[]);const i=this.position&&google.maps.ControlPosition[this.position]?google.maps.ControlPosition[this.position]:google.maps.ControlPosition.TOP_LEFT;return n.drawingMode=null,n.drawingControl=!this.$scopedSlots.default,n.drawingControlOptions={drawingModes:this.drawingModes,position:i},this.$drawingManagerObject=new google.maps.drawing.DrawingManager(n),b(this,this.$drawingManagerObject,v),this.$drawingManagerObject.addListener("overlaycomplete",(e=>this.addShape(e))),this.$map.addListener("click",this.clearSelection),this&&this.finalShapes&&this.finalShapes.length&&this.drawAll(),this.$drawingManagerObject})).catch((e=>{throw e}));return this.$drawingManagerPromise=e,{$drawingManagerPromise:e}},props:{circleOptions:{type:Object,default:void 0},markerOptions:{type:Object,default:void 0},polygonOptions:{type:Object,default:void 0},polylineOptions:{type:Object,default:void 0},rectangleOptions:{type:Object,default:void 0},position:{type:String,default:""},shapes:{type:Array,required:!0}},data:()=>({selectedShape:null,drawingModes:[],options:{drawingMode:null,drawingControl:!0,drawingControlOptions:{}},finalShapes:[]}),watch:{position(e){if(this.$drawingManagerObject){const t={position:e&&google.maps.ControlPosition[e]?google.maps.ControlPosition[e]:google.maps.ControlPosition.TOP_LEFT,drawingModes:this.drawingModes};this.$drawingManagerObject.setOptions({drawingControlOptions:t})}},circleOptions(e){this.$drawingManagerObject&&this.$drawingManagerObject.setOptions({circleOptions:e})},markerOptions(e){this.$drawingManagerObject&&this.$drawingManagerObject.setOptions({markerOptions:e})},polygonOptions(e){this.$drawingManagerObject&&this.$drawingManagerObject.setOptions({polygonOptions:e})},polylineOptions(e){this.$drawingManagerObject&&this.$drawingManagerObject.setOptions({polylineOptions:e})},rectangleOptions(e){this.$drawingManagerObject&&this.$drawingManagerObject.setOptions({rectangleOptions:e})}},mounted(){this.finalShapes=[...this.shapes]},destroyed(){this.clearAll(),this.$drawingManagerObject&&this.$drawingManagerObject.setMap&&this.$drawingManagerObject.setMap(null)},methods:{setDrawingMode(e){this.$drawingManagerObject.setDrawingMode(e)},drawAll(){const e={circle:google.maps.Circle,marker:google.maps.Marker,polygon:google.maps.Polygon,polyline:google.maps.Polyline,rectangle:google.maps.Rectangle},t=this;this.finalShapes.forEach((o=>{const n=new e[o.type](o.overlay);n.setMap(this.$map),o.overlay=n,google.maps.event.addListener(n,"click",(()=>{t.setSelection(o)}))}))},clearAll(){this.clearSelection(),this.finalShapes.forEach((e=>{e.overlay.setMap(null)}))},clearSelection(){this.selectedShape&&(this.selectedShape.overlay.set("fillColor","#777"),this.selectedShape.overlay.set("strokeColor","#999"),this.selectedShape.overlay.setEditable(!1),this.selectedShape.overlay.setDraggable(!1),this.selectedShape=null)},setSelection(e){this.clearSelection(),this.selectedShape=e,e.overlay.setEditable(!0),e.overlay.setDraggable(!0),this.selectedShape.overlay.set("fillColor","#555"),this.selectedShape.overlay.set("strokeColor","#777")},deleteSelection(){if(this.selectedShape){this.selectedShape.overlay.setMap(null);const e=this.finalShapes.indexOf(this.selectedShape);e>-1&&this.finalShapes.splice(e,1)}},addShape(e){this.setDrawingMode(null),this.finalShapes.push(e),this.$emit("update:shapes",[...this.finalShapes]);const t=this;google.maps.event.addListener(e.overlay,"click",(()=>{t.setSelection(e)})),google.maps.event.addListener(e.overlay,"rightclick",(()=>{t.deleteSelection()})),this.setSelection(e)}}},undefined,false,undefined,!1,void 0,void 0,void 0);const ge=E({},undefined,{name:"HeatmapLayer",mixins:[z],render:()=>"",provide(){const e=[],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:this.$map,...u(this,$)},{options:n,...i}=o;return this.$heatmapLayerObject=new google.maps.visualization.HeatmapLayer(i),b(this,this.$heatmapLayerObject,$),p(this,this.$heatmapLayerObject,e),this.$heatmapLayerObject})).catch((e=>{throw e}));return this.$heatmapLayerPromise=t,{$heatmapLayerPromise:t}},props:{options:{type:Object,default:()=>{}},data:{type:Array,default:void 0}},destroyed(){this.$heatmapLayerObject&&this.$heatmapLayerObject.setMap&&this.$heatmapLayerObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);const be=E({render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("div",{ref:"flyaway"},[e._t("default")],2)])},staticRenderFns:[]},undefined,{name:"InfoWindow",mixins:[z],inject:{$markerPromise:{default:null}},provide(){const e=["domready","closeclick","content_changed"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,w)},{options:n,position:i,...s}=o;return s.content=this.$refs.flyaway,this.$markerPromise&&this.$markerPromise.then((e=>(this.$markerObject=e,e))),this.$infoWindowObject=new google.maps.InfoWindow(s),b(this,this.$infoWindowObject,w),p(this,this.$infoWindowObject,e),this._openInfoWindow(),this.$watch("opened",(()=>{this._openInfoWindow()})),this.$infoWindowObject})).catch((e=>{throw e}));return this.$infoWindowPromise=t,{$infoWindowPromise:t}},props:{content:{type:[String,Object],default:void 0},opened:{type:Boolean,default:!0},position:{type:Object,default:void 0},zIndex:{type:Number,default:0},options:{type:Object,required:!1,default:void 0}},mounted(){const e=this.$refs.flyaway;e.parentNode.removeChild(e)},destroyed(){this.$infoWindowObject&&this.$infoWindowObject.setMap&&this.$infoWindowObject.setMap(null)},methods:{_openInfoWindow(){this.opened?null!==this.$markerObject?this.$infoWindowObject.open(this.$map,this.$markerObject):this.$infoWindowObject.open(this.$map):this.$infoWindowObject.close()}}},undefined,false,undefined,!1,void 0,void 0,void 0);const Oe=E({},undefined,{name:"KmlLayer",mixins:[z],render:()=>"",provide(){const e=["click","rightclick","dblclick","mouseup","mousedown","mouseover","mouseout"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,j)},{options:n,...i}=o;return this.$kmlLayerObject=new google.maps.KmlLayer(i),b(this,this.$kmlLayerObject,j),p(this,this.$kmlLayerObject,e),this.$kmlLayerObject})).catch((e=>{throw e}));return this.$kmlLayerPromise=t,{$kmlLayerPromise:t}},props:{clickable:{type:Boolean,default:!0},map:{type:Object,default:void 0},preserveViewport:{type:Boolean,default:!1},screenOverlays:{type:Boolean,default:!1},suppressInfoWindows:{type:Boolean,default:void 0},url:{type:String,default:""},zIndex:{type:Number,default:void 0},options:{type:Object,default:void 0}},destroyed(){this.$kmlLayerObject&&this.$kmlLayerObject.setMap&&this.$kmlLayerObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);var ve={props:["resizeBus"],data:function(){return{_actualResizeBus:null}},created:function(){void 0===this.resizeBus?this.$data._actualResizeBus=this.$gmapDefaultResizeBus:this.$data._actualResizeBus=this.resizeBus},methods:{_resizeCallback:function(){this.resize()},_delayedResizeCallback:function(){var e=this;this.$nextTick((function(){return e._resizeCallback()}))}},watch:{resizeBus:function(e){this.$data._actualResizeBus=e},"$data._actualResizeBus":function(e,t){t&&t.$off("resize",this._delayedResizeCallback),e&&e.$on("resize",this._delayedResizeCallback)}},destroyed:function(){this.$data._actualResizeBus&&this.$data._actualResizeBus.$off("resize",this._delayedResizeCallback)}},$e={name:"MapLayer",mixins:[ve],provide(){return this.$mapPromise=new Promise(((e,t)=>{this.$mapPromiseDeferred={resolve:e,reject:t}})),{$mapPromise:this.$mapPromise}},props:{center:{type:Object,required:!0},zoom:{type:Number,required:!1,default:void 0},heading:{type:Number,default:void 0},mapTypeId:{type:String,default:"roadmap"},tilt:{type:Number,default:void 0},options:{type:Object,default:void 0}},data:()=>({recyclePrefix:"__gmc__"}),computed:{finalLat(){return this.center&&"function"==typeof this.center.lat?this.center.lat():this.center.lat},finalLng(){return this.center&&"function"==typeof this.center.lng?this.center.lng():this.center.lng},finalLatLng(){return{lat:this.finalLat,lng:this.finalLng}}},watch:{zoom(e){this.$mapObject&&this.$mapObject.setZoom(e)}},beforeDestroy(){const e=this.getRecycleKey();window[e]&&(window[e].div=this.$mapObject.getDiv())},mounted(){return this.$gmapApiPromiseLazy().then((()=>{const e=this.$refs["vue-map"],t={...this.options,...u(this,k)},{options:o,...n}=t,i=n,s=this.getRecycleKey();return this&&this.options&&this.options.recycle&&window[s]?(e.appendChild(window[s].div),this.$mapObject=window[s].map,this.$mapObject.setOptions(i)):(this.$mapObject=new google.maps.Map(e,i),window[s]={map:this.$mapObject}),b(this,this.$mapObject,k),p(this,this.$mapObject,["bounds_changed","click","dblclick","drag","dragend","dragstart","idle","mousemove","mouseout","mouseover","resize","rightclick","tilesloaded"]),y(((e,t,o)=>{this.$mapObject.addListener("center_changed",(()=>{o()&&this.$emit("center_changed",this.$mapObject.getCenter()),t()}));g(this,["finalLat","finalLng"],(()=>{e(),this.$mapObject.setCenter(this.finalLatLng)}))})),this.$mapObject.addListener("zoom_changed",(()=>{this.$emit("zoom_changed",this.$mapObject.getZoom())})),this.$mapObject.addListener("bounds_changed",(()=>{this.$emit("bounds_changed",this.$mapObject.getBounds())})),this.$mapPromiseDeferred.resolve(this.$mapObject),this.$mapObject})).catch((e=>{throw e}))},methods:{resize(){this.$mapObject&&google.maps.event.trigger(this.$mapObject,"resize")},resizePreserveCenter(){if(!this.$mapObject)return;const e=this.$mapObject.getCenter();google.maps.event.trigger(this.$mapObject,"resize"),this.$mapObject.setCenter(e)},_resizeCallback(){this.resizePreserveCenter()},panBy(...e){this.$mapObject&&this.$mapObject.panBy(...e)},panTo(...e){this.$mapObject&&this.$mapObject.panTo(...e)},panToBounds(...e){this.$mapObject&&this.$mapObject.panToBounds(...e)},fitBounds(...e){this.$mapObject&&this.$mapObject.fitBounds(...e)},getRecycleKey(){return this&&this.options&&this.options.recycle?this.recyclePrefix+this.options.recycle:this.recyclePrefix}},destroyed(){this.$mapObject&&this.$mapObject.setMap&&this.$mapObject.setMap(null)}};const we="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function je(e){return(e,t)=>function(e,t){const o=we?t.media||"default":e,n=Pe[o]||(Pe[o]={ids:new Set,styles:[]});if(!n.ids.has(e)){n.ids.add(e);let o=t.source;if(t.map&&(o+="\n/*# sourceURL="+t.map.sources[0]+" */",o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t.map))))+" */"),n.element||(n.element=document.createElement("style"),n.element.type="text/css",t.media&&n.element.setAttribute("media",t.media),void 0===ke&&(ke=document.head||document.getElementsByTagName("head")[0]),ke.appendChild(n.element)),"styleSheet"in n.element)n.styles.push(o),n.element.styleSheet.cssText=n.styles.filter(Boolean).join("\n");else{const e=n.ids.size-1,t=document.createTextNode(o),i=n.element.childNodes;i[e]&&n.element.removeChild(i[e]),i.length?n.element.insertBefore(t,i[e]):n.element.appendChild(t)}}}(e,t)}let ke;const Pe={};const Me=E({render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"vue-map-container"},[o("div",{ref:"vue-map",staticClass:"vue-map"}),e._v(" "),o("div",{staticClass:"vue-map-hidden"},[e._t("default")],2),e._v(" "),e._t("visible")],2)},staticRenderFns:[]},(function(e){e&&e("data-v-58f81a38_0",{source:".vue-map-container{position:relative}.vue-map-container .vue-map{left:0;right:0;top:0;bottom:0;position:absolute}.vue-map-hidden{display:none}",map:void 0,media:void 0})}),$e,undefined,false,undefined,!1,je,void 0,void 0);const _e=E({},undefined,{name:"MarkerIcon",mixins:[z],inject:{$clusterPromise:{default:null}},provide(){const e=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,P)},{options:n,...i}=o;return this.$clusterPromise&&(i.map=null),this.$markerObject=new google.maps.Marker(i),b(this,this.$markerObject,P),p(this,this.$markerObject,e),this.$markerObject.addListener("dragend",(()=>{const e=this.$markerObject.getPosition();this.$emit("update:position",{lat:e.lat(),lng:e.lng()})})),this.$clusterPromise&&this.$clusterPromise.then((e=>{e.addMarker(this.$markerObject),this.$clusterObject=e})),this.$markerObject})).catch((e=>{throw e}));return this.$markerPromise=t,{$markerPromise:t}},props:{animation:{type:Number,default:void 0},attribution:{type:Object,default:void 0},clickable:{type:Boolean,default:!0},cursor:{type:String,default:void 0},draggable:{type:Boolean,default:!1},icon:{type:[String,Object],default:void 0},label:{type:[String,Object],default:void 0},opacity:{type:Number,default:1},options:{type:Object,default:void 0},place:{type:Object,default:void 0},position:{type:Object,default:void 0},shape:{type:Object,default:void 0},title:{type:String,default:void 0},visible:{type:Boolean,default:!0},zIndex:{type:Number,default:void 0}},destroyed(){this.$markerObject&&(this.$clusterObject?this.$clusterObject.removeMarker(this.$markerObject,!0):this.$markerObject&&this.$markerObject.setMap&&this.$markerObject.setMap(null))},render(e){return this.$slots.default&&0!==this.$slots.default.length?1===this.$slots.default.length?this.$slots.default[0]:e("div",this.$slots.default):""}},undefined,undefined,undefined,!1,void 0,void 0,void 0);const Ce=E({render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("label",[o("span",{domProps:{textContent:e._s(e.label)}}),e._v(" "),o("input",{ref:"input",class:e.className,attrs:{type:"text",placeholder:e.placeholder}})])},staticRenderFns:[]},undefined,{name:"PlaceInput",props:{bounds:{type:Object,default:void 0},defaultPlace:{type:String,default:""},componentRestrictions:{type:Object,default:null},types:{type:Array,default:void 0},placeholder:{required:!1,type:String,default:void 0},className:{required:!1,type:String,default:void 0},label:{required:!1,type:String,default:null},selectFirstOnEnter:{require:!1,type:Boolean,default:!1}},created(){window.console.warn("The PlaceInput class is deprecated! Please consider using the Autocomplete input instead, it will be removed in the next major release of this plugin.")},mounted(){const{input:e}=this.$refs;e.value=this.defaultPlace,this.$watch("defaultPlace",(()=>{e.value=this.defaultPlace})),this.$gmapApiPromiseLazy().then((()=>{const e=u(this,L);if(this.selectFirstOnEnter&&f(this.$refs.input),"function"!=typeof google.maps.places.Autocomplete)throw new Error("google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?");this.$autoCompleter=new google.maps.places.Autocomplete(this.$refs.input,e);const{placeholder:t,place:o,defaultPlace:n,className:i,label:s,selectFirstOnEnter:r,...a}=L;b(this,this.$autoCompleter,a),this.$autoCompleter.addListener("place_changed",(()=>{this.$emit("place_changed",this.$autoCompleter.getPlace())}))}))},destroyed(){this.$autoCompleter&&this.$autoCompleter.setMap&&this.$autoCompleter.setMap(null)}},undefined,false,undefined,!1,void 0,void 0,void 0);const Se=E({},undefined,{name:"PolygonShape",mixins:[z],render:()=>"",provide(){const e=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,_)},{options:n,path:i,paths:s,...r}=o;this.$polygonObject=new google.maps.Polygon(r),b(this,this.$polygonObject,_),p(this,this.$polygonObject,e);let a=()=>{};return this.$watch("paths",(e=>{if(e){a(),this.$polygonObject.setPaths(e);const t=()=>{this.$emit("paths_changed",this.$polygonObject.getPaths())},o=[],n=this.$polygonObject.getPaths();for(let e=0;e<n.getLength();e+=1){const i=n.getAt(e);o.push([i,i.addListener("insert_at",t)]),o.push([i,i.addListener("remove_at",t)]),o.push([i,i.addListener("set_at",t)])}o.push([n,n.addListener("insert_at",t)]),o.push([n,n.addListener("remove_at",t)]),o.push([n,n.addListener("set_at",t)]),a=()=>{o.forEach((([,e])=>{google.maps.event.removeListener(e)}))}}}),{deep:this.deepWatch,immediate:!0}),this.$watch("path",(e=>{if(e){a(),this.$polygonObject.setPaths(e);const t=this.$polygonObject.getPath(),o=[],n=()=>{this.$emit("path_changed",this.$polygonObject.getPath())};o.push([t,t.addListener("insert_at",n)]),o.push([t,t.addListener("remove_at",n)]),o.push([t,t.addListener("set_at",n)]),a=()=>{o.forEach((([,e])=>{google.maps.event.removeListener(e)}))}}}),{deep:this.deepWatch,immediate:!0}),this.$polygonObject})).catch((e=>{throw e}));return this.$polygonPromise=t,{$polygonPromise:t}},props:{deepWatch:{type:Boolean,default:!1},clickable:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:""},fillOpacity:{type:Number,default:1},strokeColor:{type:String,default:""},strokeOpacity:{type:Number,default:1},strokePosition:{type:Number,default:0},strokeWeight:{type:Number,default:1},visible:{type:Boolean,default:!0},options:{type:Object,default:void 0},path:{type:Array,noBind:!0,default:void 0},paths:{type:Array,noBind:!0,default:void 0}},destroyed(){this.$polygonObject&&this.$polygonObject.setMap&&this.$polygonObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);const Be=E({},undefined,{name:"PolylineShape",mixins:[z],render:()=>"",provide(){const e=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,C)},{options:n,...i}=o;this.$polylineObject=new google.maps.Polyline(i),b(this,this.$polylineObject,C),p(this,this.$polylineObject,e);let s=()=>{};return this.$watch("path",(e=>{if(e){s(),this.$polylineObject.setPath(e);const t=this.$polylineObject.getPath(),o=[],n=()=>{this.$emit("path_changed",this.$polylineObject.getPath())};o.push([t,t.addListener("insert_at",n)]),o.push([t,t.addListener("remove_at",n)]),o.push([t,t.addListener("set_at",n)]),s=()=>{o.forEach((([,e])=>{google.maps.event.removeListener(e)}))}}}),{deep:this.deepWatch,immediate:!0}),this.$polylineObject})).catch((e=>{throw e}));return this.$polylinePromise=t,{$polylinePromise:t}},props:{deepWatch:{type:Boolean,default:!1},clickable:{type:Boolean,default:!1},draggable:{type:Boolean},editable:{type:Boolean},strokeColor:{type:String,default:""},strokeOpacity:{type:Number,default:1},strokeWeight:{type:Number,default:1},visible:{type:Boolean,default:!0},options:{type:Object,default:void 0},path:{type:Array,default:void 0}},destroyed(){this.$polylineObject&&this.$polylineObject.setMap&&this.$polylineObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);const Le=E({},undefined,{name:"RectangleShape",mixins:[z],render:()=>"",provide(){const e=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],t=this.$mapPromise.then((t=>{this.$map=t;const o={...this.options,map:t,...u(this,S)},{options:n,...i}=o;return this.$rectangleObject=new google.maps.Rectangle(i),b(this,this.$rectangleObject,S),p(this,this.$rectangleObject,e),this.$rectangleObject})).catch((e=>{throw e}));return this.$rectanglePromise=t,{$rectanglePromise:t}},props:{bounds:{type:Object,default:void 0},clickable:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},fillColor:{type:String,default:""},fillOpacity:{type:Number,default:1},strokeColor:{type:String,default:""},strokeOpacity:{type:Number,default:1},strokePosition:{type:Number,default:0},strokeWeight:{type:Number,default:1},visible:{type:Boolean,default:!0},options:{type:Object,default:void 0}},destroyed(){this.$rectangleObject&&this.$rectangleObject.setMap&&this.$rectangleObject.setMap(null)}},undefined,undefined,undefined,!1,void 0,void 0,void 0);const xe=E({render:function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"vue-street-view-pano-container"},[o("div",{ref:"vue-street-view-pano",staticClass:"vue-street-view-pano"}),e._v(" "),e._t("default")],2)},staticRenderFns:[]},(function(e){e&&e("data-v-32786ad9_0",{source:".vue-street-view-pano-container{position:relative}.vue-street-view-pano-container .vue-street-view-pano{left:0;right:0;top:0;bottom:0;position:absolute}",map:void 0,media:void 0})}),{name:"StreetViewPanorama",mixins:[ve],provide(){return this.$panoPromise=new Promise(((e,t)=>{this.$panoPromiseDeferred={resolve:e,reject:t}})),{$panoPromise:this.$panoPromise,$mapPromise:this.$panoPromise}},props:{zoom:{type:Number,default:void 0},pov:{type:Object,default:void 0},position:{type:Object,default:void 0},pano:{type:String,default:void 0},motionTracking:{type:Boolean},visible:{type:Boolean,default:!0},options:{type:Object,default:void 0}},replace:!1,computed:{finalLat(){return this.position&&"function"==typeof this.position.lat?this.position.lat():this.position.lat},finalLng(){return this.position&&"function"==typeof this.position.lng?this.position.lng():this.position.lng},finalLatLng(){return{lat:this.finalLat,lng:this.finalLng}}},watch:{zoom(e){this.$panoObject&&this.$panoObject.setZoom(e)}},mounted(){const e=["closeclick","status_changed"];return this.$gmapApiPromiseLazy().then((()=>{const t=this.$refs["vue-street-view-pano"],o={...this.options,...u(this,M)},{options:n,...i}=o;return this.$panoObject=new google.maps.StreetViewPanorama(t,i),b(this,this.$panoObject,M),p(this,this.$panoObject,e),y(((e,t,o)=>{e(),this.$panoObject.addListener("position_changed",(()=>{o()&&this.$emit("position_changed",this.$panoObject.getPosition()),t()}));g(this,["finalLat","finalLng"],(()=>{e(),this.$panoObject.setPosition(this.finalLatLng)}))})),this.$panoPromiseDeferred.resolve(this.$panoObject),this.$panoPromise})).catch((e=>{throw e}))},methods:{resize(){this.$panoObject&&google.maps.event.trigger(this.$panoObject,"resize")}},destroyed(){this.$panoObject&&this.$panoObject.setMap&&this.$panoObject.setMap(null)}},undefined,false,undefined,!1,je,void 0,void 0);var Ee=["mappedProps","name","ctr","ctrArgs","events","beforeCreate","afterCreate","props"],We=["options"];function ze(e,t){var o=!1;window.GoogleMapsCallback=function(){try{e(),o=!0,t&&t()}catch(e){window.console.error("Error executing the GoogleMapsCallback",e)}};var n=setTimeout((function(){var e=setInterval((function(){n&&(clearTimeout(n),n=void 0),null==(window&&window.google&&window.google.maps)||o||(window.GoogleMapsCallback(),o=!0),o&&(clearInterval(e),e=void 0)}),500)}),1e3)}var Ne,Ae,Ie=(Ne=!1,function(e,t){if("object"!==n(e))throw new Error("options should  be an object");if("undefined"!=typeof document){var i=o({},e),s=i.libraries;if(Ne)window.console.info("You already started the loading of google maps");else{Ne=!0;var r="boolean"==typeof t&&t?"https://maps.google.cn":"https://maps.googleapis.com",a=document.createElement("SCRIPT");Array.isArray(s)&&(i.libraries=s.join(",")),i.callback="GoogleMapsCallback";var l=Object.keys(i).map((function(e){return"".concat(encodeURIComponent(e),"=").concat(encodeURIComponent(i[e]))})).join("&"),c="".concat(r,"/maps/api/js?").concat(l);a.setAttribute("src",c),a.setAttribute("async",""),a.setAttribute("defer",""),document.head.appendChild(a)}}});var Re={HeatmapLayer:ge,KmlLayer:Oe,Marker:_e,Polyline:Be,Polygon:Se,Circle:N,Cluster:fe,Rectangle:Le,DrawingManager:ye,InfoWindow:be,MapLayer:Me,PlaceInput:Ce,Autocomplete:W,StreetViewPanorama:xe,MapElementMixin:z,MountableMixin:ve},Te={googleMapsApiInitializer:Ie,MapElementFactory:function(e){var t=e.mappedProps,n=e.name,r=e.ctr,l=e.ctrArgs,c=e.events,d=e.beforeCreate,h=e.afterCreate,f=e.props,y=s(e,Ee),g="$".concat(n,"Promise"),O="$".concat(n,"Object");return function(e,t){if(!e)throw new Error(t)}(!(f instanceof Array),"`props` should be an object, not Array"),o(o({},"undefined"!=typeof GENERATE_DOC?{$vgmOptions:e}:{}),{},{mixins:[z],props:o(o({},f),m(t)),render:function(){return""},provide:function(){var e=this,n=this.$mapPromise.then((function(n){e.$map=n;var i=o(o({},e.options),{},{map:n},u(e,t));i.options;var r=s(i,We);if(d){var a=d.bind(e)(r);if(a instanceof Promise)return a.then((function(){return{options:r}}))}return{options:r}})).then((function(o){var n,i=o.options,s=r();return e[O]=l?new((n=Function.prototype.bind).call.apply(n,[s,null].concat(a(l(i,u(e,f||{})))))):new s(i),b(e,e[O],t),p(e,e[O],c),h&&h.bind(e)(e[O]),e[O]}));return this[g]=n,i({},g,n)},destroyed:function(){this[O]&&this[O].setMap&&this[O].setMap(null)}},y)}};function Fe(e,t){var n=o({dynamicLoad:!1,installComponents:!0,autoBindAllEvents:!1,load:{libraries:"places"}},t);Ae=new e({data:{isReady:!1}});var i=new e,s=function(e,t){return function(o){function n(){return t.isReady=!0,window.google}if(o&&o.load&&o.load.key||o.dynamicLoad)return h((function(){return"undefined"==typeof window?new Promise((function(){})).then(n):new Promise((function(t,n){try{ze(t,window[o&&o.load&&o.load.customCallback]),o.dynamicLoad||e(o.load,o.loadCn)}catch(e){n(e)}})).then(n)}));var i=new Promise((function(e){"undefined"!=typeof window&&ze(e,window[o&&o.load&&o.load.customCallback])})).then(n);return h((function(){return i}))}}(Ie,Ae),r=s(n);e.mixin({created:function(){this.$gmapDefaultResizeBus=i,this.$gmapApiPromiseLazy=r,this.$gmapOptions=n}}),e.$gmapDefaultResizeBus=i,e.$gmapApiPromiseLazy=r,e.$gmapOptions=n,n.installComponents&&(e.component("GmapMap",Me),e.component("GmapMarker",_e),e.component("GmapInfoWindow",be),e.component("GmapHeatmapLayer",ge),e.component("GmapKmlLayer",Oe),e.component("GmapPolyline",Be),e.component("GmapPolygon",Se),e.component("GmapCircle",N),e.component("GmapRectangle",Le),e.component("GmapDrawingManager",ye),e.component("GmapAutocomplete",W),e.component("GmapPlaceInput",Ce),e.component("GmapStreetViewPanorama",xe))}var De={install:Fe};return e.components=Re,e.default=De,e.getGoogleMapsAPI=function(){return Ae.isReady&&window.google},e.helpers=Te,e.install=Fe,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
